{"ast":null,"code":"var _jsxFileName = \"C:\\\\Project Center\\\\Fiance-Aid\\\\User-Side\\\\user-side\\\\src\\\\components\\\\User-Components\\\\UserEntery.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserEntry() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    phoneNumber: '',\n    address: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('/api/users', formData); // Assuming your backend endpoint is '/api/users'\n      console.log(res.data);\n      setFormData({\n        name: '',\n        phoneNumber: '',\n        address: ''\n      }); // Reset form fields to empty strings\n      window.location.reload();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: formData.name,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"phoneNumber\",\n      placeholder: \"Phone Number\",\n      value: formData.phoneNumber,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"address\",\n      placeholder: \"Address\",\n      value: formData.address,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(UserEntry, \"EMgxBcY96c2tfnaeKjBjj2RFKZk=\");\n_c = UserEntry;\nexport default UserEntry;\nvar _c;\n$RefreshReg$(_c, \"UserEntry\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UserEntry","_s","formData","setFormData","name","phoneNumber","address","handleChange","e","target","value","handleSubmit","preventDefault","res","post","console","log","data","window","location","reload","err","error","onSubmit","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Project Center/Fiance-Aid/User-Side/user-side/src/components/User-Components/UserEntery.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction UserEntry() {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    phoneNumber: '',\r\n    address: ''\r\n  });\r\n\r\n  const handleChange = e => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('/api/users', formData); // Assuming your backend endpoint is '/api/users'\r\n      console.log(res.data);\r\n      setFormData({ name: '', phoneNumber: '', address: '' }); // Reset form fields to empty strings\r\n      window.location.reload(); \r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleChange} />\r\n      <input type=\"text\" name=\"phoneNumber\" placeholder=\"Phone Number\" value={formData.phoneNumber} onChange={handleChange} />\r\n      <input type=\"text\" name=\"address\" placeholder=\"Address\" value={formData.address} onChange={handleChange} />\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default UserEntry;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAGC,CAAC,IAAI;IACxBL,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,CAAC,CAACC,MAAM,CAACL,IAAI,GAAGI,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAMH,CAAC,IAAI;IAC9BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,YAAY,EAAEZ,QAAQ,CAAC,CAAC,CAAC;MACtDa,OAAO,CAACC,GAAG,CAACH,GAAG,CAACI,IAAI,CAAC;MACrBd,WAAW,CAAC;QAAEC,IAAI,EAAE,EAAE;QAAEC,WAAW,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC,CAAC,CAAC;MACzDY,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZN,OAAO,CAACO,KAAK,CAACD,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEtB,OAAA;IAAMwB,QAAQ,EAAEZ,YAAa;IAAAa,QAAA,gBAC3BzB,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACrB,IAAI,EAAC,MAAM;MAACsB,WAAW,EAAC,MAAM;MAAChB,KAAK,EAAER,QAAQ,CAACE,IAAK;MAACuB,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGhC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACrB,IAAI,EAAC,aAAa;MAACsB,WAAW,EAAC,cAAc;MAAChB,KAAK,EAAER,QAAQ,CAACG,WAAY;MAACsB,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxHhC,OAAA;MAAO0B,IAAI,EAAC,MAAM;MAACrB,IAAI,EAAC,SAAS;MAACsB,WAAW,EAAC,SAAS;MAAChB,KAAK,EAAER,QAAQ,CAACI,OAAQ;MAACqB,QAAQ,EAAEpB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3GhC,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEX;AAAC9B,EAAA,CA/BQD,SAAS;AAAAgC,EAAA,GAAThC,SAAS;AAiClB,eAAeA,SAAS;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}